@using Library.Services.ServiceModels
@model UserModel

@Styles.Render("~/Content/datatable-css")
@{
    ViewBag.Title = "Index";
}

@if (User.Identity.IsAuthenticated)
{
    <h2>Users</h2>
    <div>
        <button type="button" class="btn btn-primary" id="btnAdd">Add</button>
    </div>
    <div>
        <table id="tblUser" class="table table-striped table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th>User Name</th>
                    <th>Full Name</th>
                    <th>Role</th>
                    <th>Is Active</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>


    <div class="area-form" style="display:none">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Insert or Update User</h3>
                    </div>
                    @using (Html.BeginForm(null, null, FormMethod.Post, new { @action = "", enctype = "multipart/form-data", id = "formRegister" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="box-body">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.UserId)
                            <div class="form-group">
                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.TextBoxFor(model => model.Password, new { @class = "form-control", Type = "password" })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.Label("Role", htmlAttributes: new { @class = "control-label col-md-2" })
                                <select class="form-control input-validation-error" data-val="true" data-val-required="The Role is required." id="RoleId" name="RoleId">
                                    <option value="">--please select</option>
                                    @foreach (var item in Model.Roles)
                                    {
                                        <option value="@item.RoleId">@item.RoleName</option>
                                    }
                                </select>
                                @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <!-- /.box-body -->

                        <div class="box-footer">
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>

                    }

                </div>
            </div>
        </div>
    </div>



    @Html.Partial("ViewMessage")


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/datatable-js")
        @Scripts.Render("~/bundles/common-js")
        @Scripts.Render("~/bundles/user-list-js")
    }


}


