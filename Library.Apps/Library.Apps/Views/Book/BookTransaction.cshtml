@model Library.Services.ServiceModels.BookTransactionServiceModel

@{
    ViewBag.Title = "BookTransaction";
}

<h2>BookTransaction</h2>
<input type="hidden" id="hiddenRole" value="@ViewBag.RoleUser" />
<div>
    @if (ViewBag.RoleUser == "Customer")
    {
        <button type="button" class="btn btn-primary" id="btnAdd">Add</button>
    }
    <button type="button" class="btn btn-success" id="btnExportExcel" onclick="exportfunc('EXCEL')">Export Excel</button>
    <button type="button" class="btn btn-danger" id="btnExportPdf" onclick="exportfunc('PDF')">Export PDF</button>
</div>
<br />
<div>
    <table id="tblBook" class="table table-striped table-bordered" style="width:100%">
        <thead>
            <tr>
                <th>No</th>
                <th>Book Title</th>
                <th>Author</th>
                <th>Book Category</th>
                <th>Price </th>
                <th>Days </th>
                <th>Total </th>
                @*<th>Loan Status </th>*@
                <th>Action</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

<div class="area-form" style="display:none">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Insert or Update Transaction</h3>
                </div>
                @using (Html.BeginForm(null, null, FormMethod.Post, new { @action = "", enctype = "multipart/form-data", id = "formTransaction" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="box-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.TransactionId)

                        <div class="form-group">
                            @Html.LabelFor(model => model.BookTitle, htmlAttributes: new { @class = "control-label col-md-2" })

                            @*@Html.EditorFor(model => model.BookTitle, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BookTitle, "", new { @class = "text-danger" })*@
                            <select class="form-control input-validation-error" data-val="true"  data-val-required="The Book field is required." id="BookId" name="BookId">
                            </select>
                            @Html.ValidationMessageFor(model => model.BookId, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.TextBoxFor(model => model.Author, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.TextBoxFor(model => model.CategoryName, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.TextBoxFor(model => model.Price, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control", Type = "date" })
                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.TextBoxFor(model => model.EndDate, new { @class = "form-control", Type = "date" })
                            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.TextBoxFor(model => model.Total, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <!-- /.box-body -->

                    <div class="box-footer">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <button type="button" class="btn btn-primary" onclick="getTotalTransaction()">Calculate</button>
                    </div>
                }

            </div>
        </div>
    </div>
</div>


@Html.Partial("ViewMessage")


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/datatable-js")
    @Scripts.Render("~/bundles/common-js")
    @Scripts.Render("~/bundles/book-transaction-js")
}
